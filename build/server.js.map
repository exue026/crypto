{"version":3,"sources":["../server/server.js"],"names":["app","port","process","env","PORT","NODE_ENV","use","static","join","__dirname","json","urlencoded","extended","req","res","next","error","Error","status","console","log","locals","message","get","send","listen"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;;;AAEA,IAAMA,MAAM,wBAAZ;AACA,IAAMC,OAAOC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;;AAEA;AACA,IAAIF,QAAQC,GAAR,CAAYE,QAAZ,KAAyB,YAA7B,EAA2C;AACzCL,MAAIM,GAAJ,CAAQ,kBAAQC,MAAR,CAAe,eAAKC,IAAL,CAAUC,SAAV,EAAqB,gBAArB,CAAf,CAAR;AACD;;AAED;AACAT,IAAIM,GAAJ,CAAQ,sBAAO,KAAP,CAAR;;AAEA;AACAN,IAAIM,GAAJ,CAAQ,qBAAWI,IAAX,EAAR;AACAV,IAAIM,GAAJ,CAAQ,qBAAWK,UAAX,CAAsB,EAAEC,UAAU,KAAZ,EAAtB,CAAR;;AAEA;AACAZ,IAAIM,GAAJ,CAAQ,MAAR;;AAEA;AACAN,IAAIM,GAAJ,CAAQ,UAACO,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC1B,MAAMC,QAAQ,IAAIC,KAAJ,CAAU,WAAV,CAAd;AACAD,QAAME,MAAN,GAAe,GAAf;AACAH,OAAKC,KAAL;AACD,CAJD;;AAMA;AACAhB,IAAIM,GAAJ,CAAQ,UAACU,KAAD,EAAQH,GAAR,EAAaC,GAAb,EAAkBC,IAAlB,EAA2B;AACjCI,UAAQC,GAAR,UAAmBJ,KAAnB;AACAF,MAAIO,MAAJ,CAAWC,OAAX,GAAqBN,MAAMM,OAA3B;AACAR,MAAIO,MAAJ,CAAWL,KAAX,GAAmBH,IAAIb,GAAJ,CAAQuB,GAAR,CAAY,KAAZ,MAAuB,aAAvB,GAAuCP,KAAvC,GAA+C,EAAlE;AACAF,MAAII,MAAJ,CAAWF,MAAME,MAAN,IAAgB,GAA3B;AACAJ,MAAIU,IAAJ,gBAAsBR,MAAMM,OAA5B;AACD,CAND;;AAQAtB,IAAIyB,MAAJ,CAAWxB,IAAX,EAAiB;AAAA,SAAMkB,QAAQC,GAAR,+BAAwCnB,IAAxC,CAAN;AAAA,CAAjB","file":"server.js","sourcesContent":["import express from 'express'\nimport path from 'path'\nimport logger from 'morgan'\nimport bodyParser from 'body-parser'\n\nimport api from './api'\n\nconst app = express()\nconst port = process.env.PORT || 8000;\n\n/* Only server static assets in production */\nif (process.env.NODE_ENV === 'production') {\n  app.use(express.static(path.join(__dirname, './client/build')))\n}\n\n/* debug messages in the console */\napp.use(logger('dev'))\n\n/* parse http request body */\napp.use(bodyParser.json())\napp.use(bodyParser.urlencoded({ extended: false }))\n\n/* main route */\napp.use('/api', api)\n\n/* catch 404 */\napp.use((req, res, next) => {\n  const error = new Error('Not Found')\n  error.status = 404\n  next(error)\n})\n\n/* error handler */\napp.use((error, req, res, next) => {\n  console.log(`*** ${error} ***`)\n  res.locals.message = error.message\n  res.locals.error = req.app.get('env') === 'development' ? error : {}\n  res.status(error.status || 500)\n  res.send(`<html><h1>${error.message}</h1></html>`)\n})\n\napp.listen(port, () => console.log(`Server listening on port ${port}`));\n"]}